;;;;
;;;; entry2.stk	-- Another GTK+ Entry Demo
;;;; 
;;;; Copyright © 2001 Erick Gallesio - I3S-CNRS/ESSI <eg@unice.fr>
;;;; 
;;;; 
;;;; This program is free software; you can redistribute it and/or modify
;;;; it under the terms of the GNU General Public License as published by
;;;; the Free Software Foundation; either version 2 of the License, or
;;;; (at your option) any later version.
;;;; 
;;;; This program is distributed in the hope that it will be useful,
;;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;;; GNU General Public License for more details.
;;;; 
;;;; You should have received a copy of the GNU General Public License
;;;; along with this program; if not, write to the Free Software
;;;; Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, 
;;;; USA.
;;;; 
;;;;           Author: Erick Gallesio [eg@unice.fr]
;;;;    Creation date: 24-Jul-2001 21:54 (eg)
;;;; Last file update: 11-Nov-2003 16:40 (eg)
;;;;

(include "gtklos-demo.stk")

(define (main args)
  (let* ((window (make <demo-window>
		       :title "STklos Entry and Events"
		       :width 400
		       :file "entry2"
		       :message "
This is a demonstration of the <entry> widget. In this demo,
an event handler is associated to the widget. This event handler
manages the \"Enter\" and \"Control-q\" keys. The former prints
a message and the second exits the demonstration.
"))
	 (entry  (make <entry>
		       :max-length 50
		       :value "This is an entry"
		       :parent window
		       :event (make <event-handler> :key
				    (lambda (e)
				      (let ((ch (event-char e)))
					(cond
					  ((char=? ch #\newline)
					   (format #t "entry value: ~S\n"
						   (value (event-widget e))))
					  ((char=? ch #\q)
					   (when (memq 'control (event-modifiers e))
					     (format #t "Quit\n")
					     (exit 0))))))))))
    
    'nothing))
