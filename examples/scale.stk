#! /usr/bin/env stklos -f
;;;;
;;;; scale.stk	-- GTklos Scale Demo
;;;; 
;;;; Copyright © 2001-2002 Erick Gallesio - I3S-CNRS/ESSI <eg@unice.fr>
;;;; 
;;;; 
;;;; This program is free software; you can redistribute it and/or modify
;;;; it under the terms of the GNU General Public License as published by
;;;; the Free Software Foundation; either version 2 of the License, or
;;;; (at your option) any later version.
;;;; 
;;;; This program is distributed in the hope that it will be useful,
;;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;;; GNU General Public License for more details.
;;;; 
;;;; You should have received a copy of the GNU General Public License
;;;; along with this program; if not, write to the Free Software
;;;; Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, 
;;;; USA.
;;;; 
;;;;           Author: Erick Gallesio [eg@unice.fr]
;;;;    Creation date:  2-Aug-2001 06:51 (eg)
;;;; Last file update:  5-Apr-2002 17:28 (eg)
;;;;

(include "gtklos-demo.stk")

(define msg "
A simple demo showing an horizontal and a vertical scale.
The vertical scale has its slot ``update-policy'' set to
delayed. consequently, the associated command is executed
when the scale is stopped rather than continuously. 
")



(define (main args)
  (let* ((win (make <demo-window> :title "Scale Demo" 
		    :file "scale" :border-width 5 :message msg))
	 (hs (make <scale> :orientation 'horizontal
			   :parent win
			   :from 90
			   :to 200
			   :value 120
			   :command (lambda (e)
				      (format #t "horizontal: ~S\n"
					      (value (event-widget e))))))
	 (vs (make <scale> :orientation 'vertical
			   :parent win
			   :height 300
			   :from 0
			   :to 1000
			   :increment 100
			   :digits 0
			   :value 40
			   :update-policy 'delayed
			   :command (lambda (e)
				      (format #t "vertical: ~S\n"
					      (value (event-widget e)))))))
    0))
       
	
		 