;;;;
;;;; dialog.stk	-- Dialog box
;;;; 
;;;; Copyright © 2001-2002 Erick Gallesio - I3S-CNRS/ESSI <eg@unice.fr>
;;;; 
;;;; 
;;;; This program is free software; you can redistribute it and/or modify
;;;; it under the terms of the GNU General Public License as published by
;;;; the Free Software Foundation; either version 2 of the License, or
;;;; (at your option) any later version.
;;;; 
;;;; This program is distributed in the hope that it will be useful,
;;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;;; GNU General Public License for more details.
;;;; 
;;;; You should have received a copy of the GNU General Public License
;;;; along with this program; if not, write to the Free Software
;;;; Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, 
;;;; USA.
;;;; 
;;;;           Author: Erick Gallesio [eg@unice.fr]
;;;;    Creation date: 11-Mar-2001 12:33 (eg)
;;;; Last file update:  7-Apr-2002 23:57 (eg)
;;;;

(include "gtklos-demo.stk")

;; Change the image-path to allow execution of the demo without installation
(set-image-path! (cons "./images" (image-path)))


(define *dialog-msg* "
Simple dialog with several buttons. All the demos
use the make-simple-dialog procedure to create the dialog
")

(define (make-dialog parent str img)
  (make <button> :parent parent
		 :text (format #f "~A dialog" str)
		 :command (lambda (_)
			    (let ((val (make-simple-dialog
					:title (string-append str " ...")
					:image img
					:text (format #f
					       "\n\n~A:\n      Hi, I'm a dialog\n\n"
					       str)
					:texts '("Ok" "Cancel" "Help"))))
			      (format #t "You have choose ~S on the ~S dialog\n"
				      val str)))))


(define (main args)
  (let* ((win (make <demo-window> :title "Dialog Demo" :x 100 :y 100
		    :file "dialog" :border-width 10 :padding 10
		    :message *dialog-msg*))
	 (b1  (make-dialog win "Error" 	  "gnome-error"))
	 (b2  (make-dialog win "Info"  	  "gnome-info"))
	 (b3  (make-dialog win "Question" "gnome-question"))
	 (b4  (make-dialog win "Warning"  "gnome-warning")))
    0))
