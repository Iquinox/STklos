	 lalr.scm -- a fast LALR parser generator for Scheme

-----------------------------------------------------------------------------
Send questions, comments, suggestions or bug reports to 
   boucherd@iro.umontreal.ca

Dominique Boucher, Ph.D. -- NuEcho Inc.
February 2005
-----------------------------------------------------------------------------

The distribution contains the following files:

	. README                  : this file.
	. documentation/lalr.html : The parser generator documentation.
	. lalr.skl                : The parser generator skeleton (sh script)
 	. Makefile                : makefile for generating system-specific 
		                    parser generators.
	. examples/               : examples of parsers
	. ports/                  : directory containing the various 
                                    implementation-specific code fragments

It has been successfully tested under the following Scheme systems:

	- Gambit v3.0, v4.0
	- PLT-Scheme 103.5
	- PLT-Scheme 205
	- Bigloo 2.6e
	- Kawa 1.7
	- Guile 1.6.4
        - STklos 

This distribution also contains ports to the following Scheme systems:

	- SISC 1.5
	- Chicken

and it should run on any Scheme implementation that provides low-level macros
and bitwise operations. 

			NOTES ON VARIOUS PORTS
			======================


PLT-SCHEME 

For PLT-Scheme, there are two versions of the tool. The first, which
can be generated using the Makefile, is only supported on version
103. For v200+, use the version in the ports/plt-scheme200
directory. Simply require the 'lalr' module.

BIGLOO 
 
To run the example in Bigloo, then 'cd' to the 'examples' directory,
then run Bigloo using the '-extend' command-line option:

% bigloo -extend ../lalr.scm
------------------------------------------------------------------------------
Bigloo (2.5b)                                                            ,--^,
`a practical Scheme compiler'                                      _ ___/ /|/
Fri Sep 6 09:43:28 CEST 2002                                   ,;'( )__, ) '
Manuel Serrano                                                ;;  //   L__.
email:                                                        '   \    /  '
Manuel.Serrano@sophia.inria.fr                                     ^   ^
------------------------------------------------------------------------------

Welcome to the interpreter

1:=> (load "calc.scm")

