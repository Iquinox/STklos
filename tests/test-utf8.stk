;;;;							-*- coding utf-8 -*-
;;;; test-utf8.stk	-- Test of UTF-8 strings
;;;;
;;;; Copyright © 2011 Erick Gallesio - Polytech'Nice-Sophia <eg@unice.fr>
;;;;
;;;;
;;;; This program is free software; you can redistribute it and/or modify
;;;; it under the terms of the GNU General Public License as published by
;;;; the Free Software Foundation; either version 2 of the License, or
;;;; (at your option) any later version.
;;;;
;;;; This program is distributed in the hope that it will be useful,
;;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;;; GNU General Public License for more details.
;;;;
;;;; You should have received a copy of the GNU General Public License
;;;; along with this program; if not, write to the Free Software
;;;; Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307,
;;;; USA.
;;;;
;;;;           Author: Erick Gallesio [eg@unice.fr]
;;;;    Creation date: 27-May-2011 23:35 (eg)
;;;; Last file update: 27-May-2011 23:55 (eg)
;;;;

(require "test")

(test-section "Unicode Characters")


;;------------------------------------------------------------------
(test-subsection "basic functions")

(test "length.1" 4 (string-length "«€œ»"))
(test "length.2" 8 (string-length "♜♞♝♛♚♝♞♜"))
(test "length.3" 8 (string-length (make-string 8 #\♟)))
(test "const"    "♟♟♟♟♟♟♟♟" (make-string 8 #\♟))


(test-subsection "Chibi Scheme unicode tests")

(test "chibi.1" #\Р (string-ref "Русский" 0))
(test "chibi.2" #\и (string-ref "Русский" 5))
(test "chibi.3" #\й (string-ref "Русский" 6))

(test "chibi.4" 7 (string-length "Русский"))

(test "chibi.5" #\日 (string-ref "日本語" 0))
(test "chibi.6" #\本 (string-ref "日本語" 1))
(test "chibi.7" #\語 (string-ref "日本語" 2))

(test "chibi.8" 3 (string-length "日本語"))

(test "chibi.9" '(#\日 #\本 #\語) (string->list "日本語"))
(test "chibi.10" "日本語" (list->string '(#\日 #\本 #\語)))

(test "chibi.11" "日本" (substring "日本語" 0 2))
(test "chibi.12" "本語" (substring "日本語" 1 3))

(test "chibi.13" "日-語"
      (let ((s (substring "日本語" 0 3)))
        (string-set! s 1 #\-)
        s))

(test "chibi.14" "日本人"
      (let ((s (substring "日本語" 0 3)))
        (string-set! s 2 #\人)
        s))

(test "chibi.15" "字字字" (make-string 3 #\字))

(test "chibi.16" "字字字"
      (let ((s (make-string 3)))
        (string-fill! s #\字)
        s))

;;------------------------------------------------------------------
(test-section-end)
