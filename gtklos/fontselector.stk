;;;;
;;;; fontselector.stk			-- GTklos Font Selector Widget
;;;; 
;;;; Copyright © 2002 Erick Gallesio - I3S-CNRS/ESSI <eg@unice.fr>
;;;; 
;;;; 
;;;; This program is free software; you can redistribute it and/or modify
;;;; it under the terms of the GNU General Public License as published by
;;;; the Free Software Foundation; either version 2 of the License, or
;;;; (at your option) any later version.
;;;; 
;;;; This program is distributed in the hope that it will be useful,
;;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;;; GNU General Public License for more details.
;;;; 
;;;; You should have received a copy of the GNU General Public License
;;;; along with this program; if not, write to the Free Software
;;;; Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, 
;;;; USA.
;;;; 
;;;;           Author: Erick Gallesio [eg@unice.fr]
;;;;    Creation date: 16-Feb-2002 11:27 (eg)
;;;; Last file update:  7-Apr-2002 19:49 (eg)
;;;;

(define-class <font-selector> (<gtk-container>)
  ((value	:accessor 	value
		:init-keyword	:value
		:allocation 	:virtual
		:slot-ref	(lambda (o)
				  (%font-ctrl (slot-ref o 'wid) 0))
		:slot-set!	(lambda (o v)
				  (%font-ctrl (slot-ref o 'wid) 1 v)))
   (preview-text :accessor	preview-text
		 :init-keyword	:preview-text
		 :allocation	:virtual
		 :slot-ref	(lambda (o)
				  (%font-ctrl (slot-ref o 'wid) 2))
		 :slot-set!	(lambda (o v)
				  (%font-ctrl (slot-ref o 'wid) 3 v)))))

(define-method realize-widget ((self <font-selector>) initargs)
  (slot-set! self 'wid (%fontselector self)))


;======================================================================
;
;		     A dialog selector for choosing fonts
;
;====================================================================== 
(define (make-font-selector-dialog :key (title "Choose a font ...")
				        (value "" value?)
					(preview-text "ABCDEF abcdef"))
  (let* ((dialog (make <ok-cancel-dialog> :title title :modal #t))
	 (sel	 (make <font-selector> :parent dialog :value value
				       :preview-text preview-text))
	 (val	 (wait-dialog dialog))
	 (res    (and (eq? val 'ok) (slot-ref sel 'value))))
    (destroy dialog)
    res))

