;;;;
;;;; combobox.stk	-- GTklos Combobox class
;;;; 
;;;; Copyright © 2002 Erick Gallesio - I3S-CNRS/ESSI <eg@unice.fr>
;;;; 
;;;; 
;;;; This program is free software; you can redistribute it and/or modify
;;;; it under the terms of the GNU General Public License as published by
;;;; the Free Software Foundation; either version 2 of the License, or
;;;; (at your option) any later version.
;;;; 
;;;; This program is distributed in the hope that it will be useful,
;;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;;; GNU General Public License for more details.
;;;; 
;;;; You should have received a copy of the GNU General Public License
;;;; along with this program; if not, write to the Free Software
;;;; Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, 
;;;; USA.
;;;; 
;;;;           Author: Erick Gallesio [eg@unice.fr]
;;;;    Creation date: 17-Jan-2002 19:03 (eg)
;;;; Last file update: 11-Feb-2002 18:58 (eg)
;;;;

;======================================================================
;
;			     < C o m b o b o x >
;
;======================================================================

(define-class <combobox> (<entry>)
  ((%entry) 	;; Don't touch! Internal use only! (the entry itself)
   (%listbox)	;; Don't touch! Internal use only! (the listbox itself)
   (text-sensitive	:accessor	text-sensitive
			:init-keyword	:text-sensitive
			:allocation	:gtk-arg
			:gtk-widget	%entry
			:gtk-name	"sensitive")
   ;;
   ;; The following slots are in fact inherited from entry
   ;; but they are overloaded here to propagate behavior to
   ;; the internal entry
   ;;
   (max-length		:accessor	max-length
			:init-keyword	:max-length
			:allocation	:gtk-arg
			:gtk-widget	%entry
			:gtk-name	"max_length")
   (text-position	:accessor	text-position
			:init-keyword	:text-position
			:allocation	:gtk-arg
			:gtk-widget	%entry
			:gtk-name	"text_position")
   (text-visibility	:accessor	text-visibility
			:init-keyword	:text-visibility
			:allocation	:gtk-arg
			:gtk-widget	%entry
			:gtk-name	"visibility")
   (items		:accessor	items
			:init-keyword	:items
			:allocation	:virtual
			:slot-ref	(lambda (o)
					  (%widget-plist (wid o) :value))
			:slot-set!	%set-listbox-items!)))

(define-method realize-widget ((self <combobox>) initargs)
  (let ((wid (%combobox self)))
    (slot-set! self 'wid wid)
    ; Keep the internal entry and listbox in our "secret" %entry and %listbox slots
    (slot-set! self '%entry   (%widget-plist wid :entry))
    (slot-set! self '%listbox (%widget-plist wid :listbox))))
	       
