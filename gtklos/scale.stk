;;;;
;;;; scale.stk				-- GTklos Scale Widget
;;;; 
;;;; Copyright © 2001-2002 Erick Gallesio - I3S-CNRS/ESSI <eg@unice.fr>
;;;; 
;;;; 
;;;; This program is free software; you can redistribute it and/or modify
;;;; it under the terms of the GNU General Public License as published by
;;;; the Free Software Foundation; either version 2 of the License, or
;;;; (at your option) any later version.
;;;; 
;;;; This program is distributed in the hope that it will be useful,
;;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;;; GNU General Public License for more details.
;;;; 
;;;; You should have received a copy of the GNU General Public License
;;;; along with this program; if not, write to the Free Software
;;;; Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, 
;;;; USA.
;;;; 
;;;;           Author: Erick Gallesio [eg@unice.fr]
;;;;    Creation date:  1-Aug-2001 07:58 (eg)
;;;; Last file update: 12-Feb-2002 15:48 (eg)
;;;;

;======================================================================
;
;			     < S c a l e >
;
;====================================================================== 
(define-class <scale> (<gtk-widget> <gtk-adjustement>)
  ((orientation   :getter	orientation
		  :allocation   :virtual
		  :slot-ref	(lambda (o)
				  (let ((type (%widget-type (slot-ref o 'wid))))
				    (if (string=? type "GtkHScale")
					'horizontal
					'vertical)))
		  :slot-set!	(%gtk-slot-ro 'orientation))
   (command	  :accessor	command
		  :init-keyword :command
		  :init-form	#f
		  :allocation	:gtk-signal
		  :gtk-widget	%adj
		  :signal-name	"stklos:value-changed")
   (show-value	  :accessor	show-value
		  :init-keyword	:show-value
		  :allocation	:gtk-arg
		  :gtk-name	"draw_value")
   (value-pos	  :accessor	value-pos
		  :init-keyword :value-pos
		  :allocation	:gtk-arg
		  :gtk-name	"value_pos")
   (digits	  :accessor 	digits
		  :init-keyword	:digits
		  :allocation	:gtk-arg)
   (update-policy :accessor	update-policy
		  :init-keyword	:update-policy
		  :allocation	:gtk-arg
		  :gtk-name	"update_policy")))


(define-method realize-widget ((self <scale>) initargs)
  (let* ((o   (key-get initargs :orientation 'vertical))
	 (opt  (case o
		 ((horizontal) #t)
		 ((vertical)   #f)
		 (else	   (%gtk-bad-orientation o))))
	 (wid  (%scale self opt)))
    
    (slot-set! self 'wid  wid)
    (slot-set! self '%adj (%widget-plist wid :adjustment))))
