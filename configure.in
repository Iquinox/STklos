dnl configure.in for STklos
dnl
dnl           Author: Erick Gallesio [eg@unice.fr]
dnl    Creation date: 28-Dec-1999 21:19 (eg)
dnl Last file update: 11-Nov-2006 19:34 (eg)


AC_INIT(src/stklos.c)
AC_PREREQ(2.52)
AM_INIT_AUTOMAKE(stklos, 0.82)
AM_CONFIG_HEADER(src/stklosconf.h)
AC_PROG_MAKE_SET

USER_CFLAGS=$CFLAGS

dnl Checks for programs.
AC_PROG_INSTALL
AC_PROG_CC
AC_PROG_RANLIB
dnl AC_PROG_LIBTOOL

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h malloc.h sys/time.h unistd.h)

export CC


dnl Initialize prefix
if test X$prefix = XNONE ;then  prefix=$ac_default_prefix; fi

dnl use -O3 if user has not specified something else and we are using GCC
if test "X$USER_CFLAGS" = "X" -a "$CC" = "gcc"
then
  CFLAGS="-O3 -fomit-frame-pointer"
fi

dnl
dnl Checks for libraries.
dnl

dnl Check for dynamic loading
AC_CHECK_FUNC(dlopen, HAVE_DLOPEN="yes", AC_CHECK_LIB(dl, dlopen, LIBS="-ldl $LIBS"&&HAVE_DLOPEN="yes"))

if test "X$HAVE_DLOPEN" = "Xyes"
then
  HAVE_DLOPEN="#define HAVE_DLOPEN 1"
fi

dnl
dnl To thread or not to thread ?
dnl
AC_CHECK_LIB(pthread, pthread_create, deflt_threads=pthreads, deflt_threads=none)

AC_ARG_ENABLE(threads,
  [AC_HELP_STRING([--enable-threads=TYPE], [choose threading package (none,pthread,lurc)])],
  THREADS=$enableval,
  THREADS=$deflt_threads)

AC_LANG(C)
dnl This checks for the presence of a given CPP define in a fiven header file
AC_DEFUN(GC_CHECK_DEFINE, [
 dnl $1: header file
 dnl $2: CPP variable
 dnl $3: then
 dnl $4: else
 AC_PREPROC_IFELSE([
 #include <$1>
 #ifndef $2
 # error "$2 undefined"
 #else
  ok
 #endif
 ],
 [$3], [$4])
])


dnl Now look at what threads we want
case "$THREADS" in
 no | none | single)
   THREADS=none
   CALLCC_STK='"callcc.stk"'
   AC_DEFINE(THREADS_NONE, [], [No thread support])
   ;;
 posix | pthreads)
   dnl Check for pthreads
   AC_CHECK_LIB(pthread, pthread_create, LIBS="-lpthread $LIBS", 
                [AC_MSG_ERROR([Missing PThread library])])
   THREADS=pthreads
   CALLCC_STK='"callcc.stk"'
   AC_DEFINE(THREADS_PTHREADS, [], [PThread support])
   ;;
 lurc)
   dnl Check for lurc
   AC_CHECK_LIB(lurc, lurc_thread_create, LIBS="-llurc $LIBS", 
                [AC_MSG_ERROR([Missing LURC library])])
   AC_CHECK_HEADER([lurc.h], [], [AC_MSG_ERROR([Missing LURC header file])])
   dnl Now check if it is compiled with GC support
   AC_MSG_CHECKING([for LURC GC support])
   GC_CHECK_DEFINE([lurc.h], [LURC_ENABLE_GC], 
                   [AC_MSG_RESULT([ok])],
                   [AC_MSG_ERROR([Missing GC support in LURC])])
   dnl That should be good
   AC_DEFINE(THREADS_LURC, [], [LURC threads support])
   CALLCC_STK='"dyn-wind-lurc.stk"'
   ;;
 *)
   AC_MSG_ERROR([Unknown thread system: $THREADS])
   ;;
esac

dnl Add the options _REENTRANT and GC_LINUX_THREADS if we are on Linux
case "$THREADS" in
  none) true ;;
  lurc) true ;;
  *) case `uname -s` in
        Linux*) STKCFLAGS="-D_REENTRANT=1 -DGC_LINUX_THREADS=1";;
     esac
esac



dnl Automake nightmare
AM_CONDITIONAL(PTHREADS, test "$THREADS" = pthreads)
AM_CONDITIONAL(LURC, test "$THREADS" = lurc)
AM_CONDITIONAL(NO_THREAD, test "$THREADS" = none)

dnl check for GMP pre-version 3.0
AC_CHECK_LIB(gmp, mpz_init_set, HAVE_GMP="yes", HAVE_GMP="no")

dnl check for GMP version post 3.0
if test "$HAVE_GMP" = "no" ;then
  AC_CHECK_LIB(gmp, __gmpz_init_set, HAVE_GMP="yes", HAVE_GMP="no")
fi


# Eventually force our gmp usage
AC_ARG_WITH(gmp-light,
	[  --with-gmp-light		use our GMP version even the system provides one],
	HAVE_GMP="no")

dnl
dnl check for GC
dnl
if test "$THREADS" = lurc
then
  AC_MSG_WARN([Using the bundled GC for LURC support])
  HAVE_GC="no"
else
  AC_CHECK_LIB(gc, GC_malloc, HAVE_GC="yes", HAVE_GC="no", $LIBS)
fi

# Test if the user want to force with our GC
AC_ARG_WITH(provided-gc,
       [  --with-provided-gc		use our GC version even the system provides one],
       HAVE_GC="no")

# On Mac OS X use the given GC (to compile it without -Ox)
case `uname -s` in
  Darwin*) echo "Force '--with-provided-gc' on MacOS";
           HAVE_GC="no" ;;
  *) true;;
esac


dnl
dnl check for PCRE
dnl
AC_CHECK_LIB(pcre, pcre_fullinfo, HAVE_PCRE="yes", HAVE_PCRE="no", $LIBS)

# Test if the user want to force with our PCRE lib
AC_ARG_WITH(provided-regexp,
       [  --with-provided-regexp	use our PCRE regexp version],
       HAVE_PCRE="no")


dnl
dnl check for LDAP library
dnl
USE_LDAP="no"
LDAP_LIB=""

AC_ARG_ENABLE(ldap, 
     [  --enable-ldap			enable ldap],
     USE_LDAP="yes")

if test "$USE_LDAP" = "yes" ;then
   AC_CHECK_HEADERS(ldap.h, USE_LDAP=yes, USE_LDAP=false)

   AC_CHECK_LIB(lber, 
	     ber_alloc, 
	     LDAP_LIB="-lldap -llber",
	     AC_CHECK_LIB(ldap, 
		          ldap_simple_bind,
			  LDAP_LIB="-lldap",
			  USE_LDAP="no")
   )
fi

if test "$USE_LDAP" = "yes" ;then
  HAVE_LDAP=define
else 
  HAVE_LDAP=undef
fi

# AC_CHECK_LIB(ldap, ldap_simple_bind, 
# 		   HAVE_LDAP="define" && LDAP_LIB="-lldap",
# 		   HAVE_LDAP="undef" && LDAP_LIB="")



dnl
dnl GTK support
dnl
AC_ARG_ENABLE(gtk, 
      [  --disable-gtk			disable gtk support],
      USE_GTK="no", USE_GTK="yes")

AC_PATH_PROG(GTK_CONFIG, gtk-config, "no")
   
AC_ARG_WITH(gtk-config,
       [  --with-gtk-config=<path>	full pathname of gtk-config script],
       GTK_CONFIG=$withval)

if test "$GTK_CONFIG" = "no" ;then
  USE_GTK=no
fi


dnl
dnl GNOME support
dnl
AC_ARG_ENABLE(gnome,
	[  --disable-gnome		disable gnome support],
	USE_GNOME="no", USE_GNOME="yes")


AC_PATH_PROG(GNOME_CONFIG, gnome-config, "no")

AC_ARG_WITH(gnome-config,
       [  --with-gnome-config=<path>	full pathname of gnome-config script],
       GNOME_CONFIG=$withval)

if test "$GNOME_CONFIG" = "no" ;then
  USE_GNOME=no
fi

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_INLINE
AC_C_BIGENDIAN
AC_CHECK_SIZEOF(long)


dnl Checks for library functions.
AC_FUNC_MEMCMP
AC_CHECK_FUNCS(getcwd getwd  putenv rmdir strstr  strtod strtol strtoul uname glob)



dnl
dnl See if we have GNU getopt_long or provide a replacement
dnl
##AC_CHECK_FUNCS(getopt_long, ,NEED_GETOPT=1)
##
##if test x$NEED_GETOPT = x1
##then
##  echo "=== No getopt_long. Using replacement function"
##  COMPSRC="$COMPSRC getopt.c getopt1.c"
##  COMPOBJ="$COMPOBJ getopt.o getopt1.o"
##fi


dnl
dnl See in what direction the stack grows (code stolen from Sawfish)
dnl 
AC_TRY_RUN([ void inner (char *foo) { char bar; exit (!(foo >= &bar)); }
	     void main () { char foo; inner (&foo); } ],
   [STACK_DIRECTION="DOWN"],
   [STACK_DIRECTION="UP"], 
   echo "Stack direction is not detected when cros compiling for now")




dnl #### AC_CHECK_HEADER(dlfcn.h, [AC_DEFINE(HAVE_DLFCN_H)])
dnl #### AC_CHECK_HEADER(dl.h, [AC_DEFINE(HAVE_DL_H)])
dnl #### dl_ok=no
dnl #### AC_CHECK_FUNC(dlopen, [AC_DEFINE(HAVE_DLOPEN) dl_ok=dl],
dnl ####     AC_CHECK_LIB(dl, dlopen, [AC_DEFINE(HAVE_DLOPEN) dl_ok=dl]))
dnl #### AC_CHECK_FUNC(shl_load, [AC_DEFINE(HAVE_SHL_LOAD) dl_ok=shl],
dnl ####     AC_CHECK_LIB(dld, shl_load, [AC_DEFINE(HAVE_DLOPEN) dl_ok=shl]))
dnl #### 
dnl #### if test $dl_ok != no; then
dnl ####   AC_DEFINE(HAVE_DYNAMIC_LOADING)
dnl #### else
dnl ####   AC_MSG_ERROR([can't figure out how to do dynamic loading])
dnl #### fi


dnl configure libraries
if test "$HAVE_GMP" = "no"
then 
  echo "No GMP library. Using the one provided with the package"
  cmd="CC=\"$CC\" CFLAGS=\"$CFLAGS\" ./configure --prefix=$prefix"
  echo "Configuring GMP"	
  echo $cmd		
  (cd gmp; eval $cmd)
  GMP=gmp
  GMPLIB="../gmp/libgmp.a"
  GMPINC="-I../gmp"
else
  echo "Using the system GMP library"
  GMP=""
  GMPLIB="-lgmp"
  GMPINC=""
fi

if test "$HAVE_GC" = "no"
then
  echo "No Boehm-Demers-Weiser GC library. Using the one provided with the package"
  (cd gc; CC="$CC" CFLAGS="$CFLAGS" sh ./configure --prefix=$prefix \
          --enable-threads=$THREADS) || { echo "Cannot configure the GC"; exit; }
  
  GC=gc
  GCLIB="../gc/.libs/libgc.a"
  GCINC="-I../gc/include"
  # Eventually add a distclean target to the GC Makefile
else
  echo "Using the system Boehm-Demers-Weiser library"
  GC=""
  GCLIB="-lgc"
  GCINC=""
  AC_DEFINE(HAVE_GC, [], [Use system GC])
fi

if test "$HAVE_PCRE" = "no"
then 
   echo "No PCRE library. Using the one provided with the package"
   PCRE_FLAGS="-Dregexec=PCRE_regexec -Dregcomp=PCRE_regcomp \
   -Dregerror=PCRE_regerror -Dregfree=PCRE_regfree"

   (cd pcre; CC=$CC CFLAGS="$CFLAGS $PCRE_FLAGS" sh ./configure \
    --prefix=$prefix --disable-shared)
    PCRE=pcre
    PCRELIB="../pcre/.libs/libpcreposix.a ../pcre/.libs/libpcre.a"
    PCREINC="-I../pcre"
    DEF_PCRE=""
else 
      echo "Using the system PCRE library"
     PCRE=""
     PCRELIB="-lpcre -lpcreposix"
     PCREINC=""
     DEF_PCRE="#define HAVE_PCRE 1"
fi


#PCRELIBS="../pcre/.libs/libpcreposix.a ../pcre/.libs/libpcre.a"
#
# case `uname -s` in
#   CYGWIN*) PCRETARGET="libpcre.la";;
#   *)       PCRETARGET="libpcre.la libpcreposix.la";;
# esac


dnl ======================================================================
dnl Various stuff done by hand
dnl ======================================================================


dnl Determine the options necessary for dynamic loading
eval `CC=$CC /bin/sh ./utils/shlib-options`

case $OS in
  SUNOS) 
    LIBS="$LIBS -lsocket -lrt -lnsl -lpthread" ;;
  UNKNOWN)
    echo ""
    echo "**** STklos has no support for your system (`uname -s`)"
    echo "**** Please modify the script \"utils/shlib-options\" to add"
    echo "**** support for your system (it's easy) and restart installation process."
    echo "**** Thanks for sending your modifications to <bugs _at_ stklos.net>"
    exit 1 ;;
esac


dnl Initilize the extra conf file in src
SCMDIR=$prefix/share/$PACKAGE/$VERSION
EXECDIR=$prefix/lib/$PACKAGE/$VERSION
PREFIX=$prefix

dnl Determine the kind of the machine which is running this script
BUILD_OS=$os-$version
BUILD_ARCH=`uname -m`
OS_NAME=$OS

dnl Place version number in VERSION file
dnl echo "VERSION=${VERSION}">VERSION

dnl GTK+/GNOME support
HAVE_GNOME="undef"

if test "$USE_GTK" = "no" ;then
   USE_GNOME="no"
fi


if test "$USE_GTK" = "yes"
then
  GTKLOS=gtklos	
  EXAMPLES="examples examples/images"

  if test "$USE_GNOME" = "yes"
  then
    HAVE_GNOME="define"
    GTK_CONFIG_LIBS=`$GNOME_CONFIG --libs  gnomecanvaspixbuf`
    GTK_CONFIG_CFLAGS=`$GNOME_CONFIG --cflags gnomeui gnomecanvaspixbuf`
  else
    GTK_CONFIG_LIBS=`$GTK_CONFIG --libs`
    GTK_CONFIG_CFLAGS=`$GTK_CONFIG --cflags`
  fi
else
  GTKLOS=
  EXAMPLES=
  GTK_CONFIG_LIBS=
  GTK_CONFIG_CFLAGS=
fi

dnl
dnl display some informations for the user
dnl 

if test "$HAVE_GMP" = "no"
then
  biglib="compile provided library (better perf. can be achieved with a recent GMP)"
else 
  biglib="use the system library"
fi

if test "$HAVE_GC" = "no"
then
  gclib="compile provided library"
else 
  gclib="use the system library"
fi

if test "$HAVE_PCRE" = "no"
then
  pcrelib="compile provided library"
else
  pcrelib="use the system library"
fi

# Compute SVN_URL 
SVN_URL=$SVN_REPOSITORY
if test "$SVN_REPOSITORY" = "" ;then
   SVN_URL="NOT_AVAILABLE"
fi

# LURC adjustment
LURCDIR=""
if test "$THREADS" = "lurc" ;then
   LURCDIR=Lurc.d
fi



dnl Output files 
AC_SUBST(STKCFLAGS)
AC_SUBST(VERSION)
AC_SUBST(HAVE_DLOPEN)
AC_SUBST(OS_FLAVOUR)
AC_SUBST(GC)
AC_SUBST(GCLIB)
AC_SUBST(GCINC)
AC_SUBST(GMP)
AC_SUBST(GMPLIB)
AC_SUBST(GMPINC)
AC_SUBST(PREFIX)
AC_SUBST(SCMDIR)
AC_SUBST(EXECDIR)
AC_SUBST(BUILD_OS)
AC_SUBST(BUILD_ARCH)
AC_SUBST(OS_NAME)
AC_SUBST(SH_COMP_FLAGS)
AC_SUBST(SH_LOAD_FLAGS)
AC_SUBST(SH_LOADER)
AC_SUBST(SH_SUFFIX)
AC_SUBST(SH_MAIN_LOAD_FLAGS)
AC_SUBST(COMPOBJ)
AC_SUBST(COMPSRC)
AC_SUBST(STACK_DIRECTION)
AC_SUBST(GTKLOS)
AC_SUBST(GTK_CONFIG_LIBS)
AC_SUBST(GTK_CONFIG_CFLAGS)
AC_SUBST(EXAMPLES)
AC_SUBST(HAVE_GNOME)
AC_SUBST(HAVE_LDAP)
AC_SUBST(LDAP_LIB)
AC_SUBST(PCRETARGET)
AC_SUBST(PCRE)
AC_SUBST(PCRELIB)
AC_SUBST(PCREINC)
AC_SUBST(DEF_PCRE)
AC_SUBST(SVN_URL)
AC_SUBST(THREADS)
AC_SUBST(LURCDIR)
AC_SUBST(CALLCC_STK)
	
AC_OUTPUT(Makefile src/Makefile src/extraconf.h doc/Makefile
          lib/Makefile gtklos/Makefile gtklos/gtklosconf.h
	  utils/Makefile lib/boot.stk
	  utils/stklos-config utils/stklos-script
	  extensions/Makefile examples/Makefile
	  examples/images/Makefile lib/Match.d/Makefile 
	  lib/SILex.d/Makefile lib/Lalr.d/Makefile lib/Lurc.d/Makefile
	  tests/Makefile extensions/extconf.h 
	  doc/stklos.1 doc/stklos-config.1 doc/stklos-compile.1 
	  doc/stklos-genlex.1 doc/stklos-install.1 
	  doc/skb/stklos-version.stk)

chmod 0755 utils/stklos-config utils/stklos-script

echo " "
echo " "
echo "SUMMARY"
echo "*******"
echo "            System: " $BUILD_OS
echo "           OS type: " $OS_FLAVOUR
echo "   Install prefix : " $prefix
echo "        C compiler: " $CC
echo " Compilation flags: " $CFLAGS
echo "    Bignum library: " $biglib
echo "    Regexp library: " $pcrelib
echo "        GC library: " $gclib
echo "      LDAP support: " $USE_LDAP
echo "      GTK+ support: " $USE_GTK 
echo "     GNOME support: " $USE_GNOME 
echo "    Thread support: " $THREADS 
echo " "
echo "If this is correct, you can just type 'make' now at your shell prompt."
echo "Otherwise, re-run 'configure' with correct options." 
echo " "
