;; ======================================================================
;; 
;; 			STklos Reference Manual
;;
;; This program is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation; either version 2 of the License, or
;; (at your option) any later version.
;; 
;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.
;; 
;; You should have received a copy of the GNU General Public License
;; along with this program; if not, write to the Free Software
;; Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, 
;; USA.
;;           Author: Erick Gallesio [eg@unice.fr]
;;    Creation date: 26-Nov-2000 18:19 (eg)
;; Last file update: 25-Oct-2006 16:17 (eg)
;;
;; ======================================================================

(chapter :title "Threads, Mutexes and Condition Variables"
(index "thread")
(index "mutex")
(index "lock")
(index "condition variable")
   

(p [The thread system provides the following data types:]
   (itemize 
      (item [ Thread (a virtual processor which shares object
			space with all other threads)])
      (item [Mutex (a mutual exclusion device,
		      also known as a lock and binary semaphore)])
      (item [Condition variable (a set of blocked threads)])))
(p [The ,(stklos) thread system is conform to ,(link-srfi 18), and implement 
all the SRFI mechanisms. See this SRFI documentation for a more complete 
description])
   
(section :title "Threads" 
   (insertdoc 'make-thread)
   (insertdoc 'current-thread)
   (insertdoc 'thread-start!)
   (insertdoc 'thread-yield!)
   (insertdoc 'thread-terminate!)
   (insertdoc 'thread-sleep!)
   (insertdoc 'thread-join!)
   (insertdoc 'thread?)
   (insertdoc 'thread-name)
   (insertdoc 'thread-stack-size)
   (insertdoc 'thread-specific)
   (insertdoc 'thread-specific-set!))
   
(section :title "Mutexes"
   (insertdoc 'make-mutex)
   (insertdoc 'mutex?)
   (insertdoc 'mutex-name)
   (insertdoc 'mutex-specific)
   (insertdoc 'mutex-specific-set!)
   (insertdoc 'mutex-state)
   (insertdoc 'mutex-lock!)
   (insertdoc 'mutex-unlock!))
   
(section :title "Condition Variables"
   (insertdoc 'make-condition-variable)
   (insertdoc 'condition-variable?)
   (insertdoc 'condition-variable-name)
   (insertdoc 'condition-variable-specific)
   (insertdoc 'condition-variable-specific-set!)
   (insertdoc 'condition-variable-signal!)
   (insertdoc 'condition-variable-broadcast!))
   
(section :title "Conditions"
   (insertdoc 'join-timeout-exception?)
   (insertdoc 'abandoned-mutex-exception?)
   (insertdoc 'terminated-thread-exception?)
   (insertdoc 'uncaught-exception?)
   (insertdoc 'uncaught-exception-reason))

)